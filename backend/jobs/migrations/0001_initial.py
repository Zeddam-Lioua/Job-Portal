# Generated by Django 5.1.4 on 2025-02-22 13:37

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Applicant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(blank=True, max_length=10, null=True)),
                ('resume_file', models.FileField(upload_to='resumes/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('candidate', 'Candidate'), ('super_candidate', 'Super Candidate'), ('hiree', 'Hiree'), ('rejected', 'Rejected'), ('contacted', 'Contacted')], default='pending', max_length=20)),
                ('hired_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='JobPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field', models.CharField(max_length=100)),
                ('required_employees', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('experience_level', models.CharField(choices=[('indifferent', 'Indifferent'), ('None', 'None'), ('Less than 1 year', 'Less than 1 year'), ('1-2 years', '1-2 years'), ('2-3 years', '2-3 years'), ('3-4 years', '3-4 years'), ('4-5 years', '4-5 years'), ('5-10 years', '5-10 years'), ('More than 10 years', 'More than 10 years')], max_length=50)),
                ('education_level', models.CharField(choices=[('indiffirent', 'Indifferent'), ('high_school', 'High School'), ('bac', 'Bac'), ('bac+1', 'Bac +1'), ('bac+2', 'Bac +2'), ('bac+3', 'Bac +3'), ('bachelors', "Bachelor's Degree"), ('masters', "Master's Degree"), ('phd', 'Ph.D.')], max_length=50)),
                ('workplace', models.CharField(choices=[('on_site', 'On Site'), ('hybrid', 'Hybrid'), ('remote', 'Remote')], max_length=50)),
                ('contract_type', models.CharField(choices=[('indifferent', 'Indifferent'), ('permanent', 'Permanent'), ('fixed_term', 'Fixed Term'), ('training', 'Training'), ('pre_employment', 'Pre-employment'), ('full_time', 'Full-time'), ('part_time', 'Part-time'), ('freelance', 'Freelance')], max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='JobRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field', models.CharField(help_text='Enter the job function', max_length=100, verbose_name='Job Function')),
                ('required_employees', models.IntegerField(help_text='Enter the number of employees needed', validators=[django.core.validators.MinValueValidator(1)], verbose_name='Required Employees')),
                ('experience_level', models.CharField(choices=[('indifferent', 'Indifferent'), ('None', 'None'), ('Less than 1 year', 'Less than 1 year'), ('1-2 years', '1-2 years'), ('2-3 years', '2-3 years'), ('3-4 years', '3-4 years'), ('4-5 years', '4-5 years'), ('5-10 years', '5-10 years'), ('More than 10 years', 'More than 10 years')], help_text='Select the required experience level', max_length=50, verbose_name='Experience Level')),
                ('education_level', models.CharField(choices=[('indiffirent', 'Indifferent'), ('high_school', 'High School'), ('bac', 'Bac'), ('bac+1', 'Bac +1'), ('bac+2', 'Bac +2'), ('bac+3', 'Bac +3'), ('bachelors', "Bachelor's Degree"), ('masters', "Master's Degree"), ('phd', 'Ph.D.')], help_text='Select the required education level', max_length=50, verbose_name='Education Level')),
                ('workplace', models.CharField(choices=[('on_site', 'On Site'), ('hybrid', 'Hybrid'), ('remote', 'Remote')], help_text='Select the workplace type', max_length=50, verbose_name='Workplace')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='PerformanceEvaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('technical_skills', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('communication', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('problem_solving', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('teamwork', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('leadership', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('adaptability', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('work_ethic', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('creativity', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
